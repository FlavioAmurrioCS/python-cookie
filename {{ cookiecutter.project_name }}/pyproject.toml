[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_name }}"
dynamic = ["version"]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.minimum_python_version }}"
license = "MIT"
keywords = []
authors = [
  { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  {%- set python_start = (cookiecutter.minimum_python_version.split('.')[-1] | int) %}
  {%+ for item in range(python_start, 15) -%}
  "Programming Language :: Python :: 3.{{ item }}",
  {%+ endfor -%}
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.optional-dependencies]
types = [
]
tests = [
  "{{ cookiecutter.project_name }}[types]",
]

[project.urls]
Documentation = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name }}#readme"
Issues = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name }}/issues"
Source = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name }}"

###############################################################################
# region: hatch
###############################################################################
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/{{ cookiecutter.project_slug }}/_version.py"

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "{{ cookiecutter.project_name }}[tests]",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
  "{{ cookiecutter.project_name }}[types]",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/{{ cookiecutter.project_slug }} tests}"
###############################################################################
# endregion: hatch
###############################################################################

###############################################################################
# region: uv
###############################################################################
[tool.uv.pip]
index-url = "https://pypi.org/simple"
###############################################################################
# endregion: uv
###############################################################################

###############################################################################
# region: coverage
###############################################################################
[tool.coverage.run]
source_pkgs = ["{{ cookiecutter.project_slug }}", "tests"]
branch = true
parallel = true
omit = [
]

[tool.coverage.paths]
{{ cookiecutter.project_slug }} = ["src/{{ cookiecutter.project_slug }}"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
###############################################################################
# endregion: coverage
###############################################################################

###############################################################################
# region: pyright
###############################################################################
[tool.pyright]
pythonVersion = "{{ cookiecutter.minimum_python_version }}"
###############################################################################
# endregion: pyright
###############################################################################

###############################################################################
# region: mypy
###############################################################################
[tool.mypy]
python_version = "{{ cookiecutter.minimum_python_version }}"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
###############################################################################
# endregion: mypy
###############################################################################

###############################################################################
# region: ruff
###############################################################################
[tool.hatch.envs.hatch-static-analysis]
config-path = "none"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "COM812", # missing-trailing-comma
  "D",      # pydocstyle
  "ERA001", # commented-out-code
  "EXE003", # shebang-missing-python
  "ISC001", # single-line-implicit-string-concatenation
  "PTH",    # flake8-use-pathlib
  "T20",    # flake8-print
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101",
]
###############################################################################
# endregion: ruff
###############################################################################
